/**
 * âœ… Problem Name: [ Single Number]
 * âœ… LeetCode Problem Number: [ 136 ]
 * âœ… Difficulty: [Easy]
 * âœ… Date Solved: [2025-08-30]
 *
 * ðŸ§  Description:
 * [Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.]
 *
 ðŸ§ª Example 1:

Input: nums = [2,2,1]

Output: 1

ðŸ§ª Example 2:

Input: nums = [4,1,2,1,2]

Output: 4

ðŸ§ª Example 3:

Input: nums = [1]

Output: 1
 *
 * ðŸ’¡ Approach:
	â€¢	Create a variable x initialized to 0 to store the XOR result.
			â€¢	Iterate through the array nums:
	â€¢	For each element n, update x = x ^ n.
			â€¢	Leverage the properties of XOR:
			â€¢	a ^ a = 0 â†’ duplicate numbers cancel each other.
			â€¢	a ^ 0 = a â†’ XOR with zero gives the number itself.
	â€¢	XOR is commutative and associative â†’ order of operations does not matter.
 *
 */
/**
 * @param {number[]} nums
 * @return {number}
 */
var singleNumber = function (nums) {
  let x = 0;
  for (const n of nums) x ^= n;
  return x;
};
